#Task 1 - Reproducing the plot for age vs. log(PCB)
library("formatR")
#Task 1 - Reproducing the plot for age vs. log(PCB)
#install.packages("formatR")
library(formatR)
#Task 1 - Reproducing the plot for age vs. log(PCB)
install.packages("formatR")
#library(formatR)
ages <- seq(from=0, to=13, by=0.1)
a <- -2.3907
b <- 2.300
l <- a + b*ages^(1/3)
trout.age <- c(1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4,4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8,
8, 9, 11, 12, 12, 12)
trout.pcb <- c(0.6 , 1.6, 0.5, 1.2, 2.0, 1.3, 2.5,2.2, 2.4, 1.2, 3.5, 4.1, 5.1, 5.7,
3.4, 9.7, 8.6, 4.0, 5.5, 10.5, 17.5,13.4, 4.5, 30.4, 12.4, 13.4, 26.2, 7.4)
plot(x=trout.age, y=log(trout.pcb))
lines(x=ages, y=l, type="l", col="blue")
#Task 2 - Rewrite log(PCB) as a function
calc_PCB = function(a, b, age) {
predicted_l <- a + b*age^(1/3)
return (predicted_l)
}
#calc_PCB(a,b,ages)
#Task 3 - Extend ages to 20 years
ages_20 <- seq(from=0, to=20, by=0.1)
plot(x=ages_20, y=calc_PCB(a,b,ages_20), "l", col="green")
#Task 4 - Get Maximum
#ages_20
#calc_PCB(a,b,ages_20)
max(calc_PCB(a,b,ages_20))
#Task 5 - Non-linear model
a2 = -4.865
b2 = 4.7016
c2 = 0.1969
# Task 5.1 - Rewrite log equation function
calc_PCB2 = function(a,b,c,age) {
predicted_l = a + b * (age^c)
return (predicted_l)
}
# Task 5.2 - Compare
fixed_age = 10
calc_PCB(a,b,fixed_age)
calc_PCB2(a2,b2,c2,fixed_age)
# Task 5.3 - Plot both equations
plot(x=ages, y=l, type="l", col="red", ylab = "log(PCB)", main="Comparing Bates-Watts estimator and the new estimator")
lines(ages, calc_PCB2(a2,b2,c2,ages), type="l", col="orange")
#Task 1 - Reproducing the plot for age vs. log(PCB)
ages <- seq(from=0, to=13, by=0.1)
a <- -2.3907
b <- 2.300
l <- a + b*ages^(1/3)
trout.age <- c(1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4,4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8,
8, 9, 11, 12, 12, 12)
trout.pcb <- c(0.6 , 1.6, 0.5, 1.2, 2.0, 1.3, 2.5,2.2, 2.4, 1.2, 3.5, 4.1, 5.1, 5.7,
3.4, 9.7, 8.6, 4.0, 5.5, 10.5, 17.5,13.4, 4.5, 30.4, 12.4, 13.4, 26.2, 7.4)
plot(x=trout.age, y=log(trout.pcb), main="Log(PCB) vs Age", xlab = "Age ->", ylab = "Log(PCB) ->")
lines(x=ages, y=l, type="l", col="blue")
#Task 2 - Rewrite log(PCB) as a function
calc_PCB = function(a, b, age) {
predicted_l <- a + b*age^(1/3)
return (predicted_l)
}
#calc_PCB(a,b,ages)
#Task 3 - Extend ages to 20 years
ages_20 <- seq(from=0, to=20, by=0.1)
plot(x=ages_20, y=calc_PCB(a,b,ages_20), "l", col="green")
#Task 4 - Get Maximum
#calc_PCB(a,b,ages_20)
max(calc_PCB(a,b,ages_20))
#Task 5 - Non-linear model
a2 = -4.865
b2 = 4.7016
c2 = 0.1969
# Task 5.1 - Rewrite log equation function
calc_PCB2 = function(a,b,c,age) {
predicted_l = a + b * (age^c)
return (predicted_l)
}
# Task 5.2 - Compare
fixed_age = 10
calc_PCB(a,b,fixed_age)
calc_PCB2(a2,b2,c2,fixed_age)
# Task 5.3 - Plot both equations
plot(x=ages, y=l, type="l", col="red", ylab = "log(PCB)", main="Comparing Bates-Watts estimator and the new estimator")
lines(ages, calc_PCB2(a2,b2,c2,ages), type="l", col="orange")
#Task 1 - Reproducing the plot for age vs. log(PCB)
ages <- seq(from=0, to=13, by=0.1)
a <- -2.3907
b <- 2.300
l <- a + b*ages^(1/3)
trout.age <- c(1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4,4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8,
8, 9, 11, 12, 12, 12)
trout.pcb <- c(0.6 , 1.6, 0.5, 1.2, 2.0, 1.3, 2.5,2.2, 2.4, 1.2, 3.5, 4.1, 5.1, 5.7,
3.4, 9.7, 8.6, 4.0, 5.5, 10.5, 17.5,13.4, 4.5, 30.4, 12.4, 13.4, 26.2, 7.4)
plot(x=trout.age, y=log(trout.pcb), main="Log(PCB) vs Age", xlab = "Age ->", ylab = "Log(PCB) ->")
lines(x=ages, y=l, type="l", col="blue")
#Task 2 - Rewrite log(PCB) as a function
calc_PCB = function(a, b, age) {
predicted_l <- a + b*age^(1/3)
return (predicted_l)
}
#calc_PCB(a,b,ages)
#Task 3 - Extend ages to 20 years
ages_20 <- seq(from=0, to=20, by=0.1)
plot(x=ages_20, y=calc_PCB(a,b,ages_20), "l", col="green")
#Task 4 - Get Maximum
max(calc_PCB(a,b,ages_20))
#Task 5 - Non-linear model
a2 = -4.865
b2 = 4.7016
c2 = 0.1969
# Task 5.1 - Rewrite log equation function
calc_PCB2 = function(a,b,c,age) {
predicted_l = a + b * (age^c)
return (predicted_l)
}
# Task 5.2 - Compare
fixed_age = 10
calc_PCB(a,b,fixed_age)
calc_PCB2(a2,b2,c2,fixed_age)
# Task 5.3 - Plot both equations
plot(x=ages, y=l, type="l", col="red", ylab = "log(PCB)", main="Comparing Bates-Watts estimator and the new estimator")
lines(ages, calc_PCB2(a2,b2,c2,ages), type="l", col="orange")
#Task 1 - Reproducing the plot for age vs. log(PCB)
ages <- seq(from=0, to=13, by=0.1)
a <- -2.3907
b <- 2.300
l <- a + b*ages^(1/3)
trout.age <- c(1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4,4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8,
8, 9, 11, 12, 12, 12)
trout.pcb <- c(0.6 , 1.6, 0.5, 1.2, 2.0, 1.3, 2.5,2.2, 2.4, 1.2, 3.5, 4.1, 5.1, 5.7,
3.4, 9.7, 8.6, 4.0, 5.5, 10.5, 17.5,13.4, 4.5, 30.4, 12.4, 13.4, 26.2, 7.4)
plot(x=trout.age, y=log(trout.pcb), main="Log(PCB) vs Age", xlab = "Age ->", ylab = "Log(PCB) ->")
lines(x=ages, y=l, type="l", col="blue")
#Task 2 - Rewrite log(PCB) as a function
calc_PCB = function(a, b, age) {
predicted_l <- a + b*age^(1/3)
return (predicted_l)
}
#Task 3 - Extend ages to 20 years
ages_20 <- seq(from=0, to=20, by=0.1)
plot(x=ages_20, y=calc_PCB(a,b,ages_20), "l", col="green", main="Log(PCB) vs Age for 20 years",
xlab="Age ->", ylab="Log(PCB) ->")
#Task 4 - Get Maximum
print(paste0("Maximum value is :", max(calc_PCB(a,b,ages_20))))
#Task 5 - Non-linear model
a2 = -4.865
b2 = 4.7016
c2 = 0.1969
# Task 5.1 - Rewrite log equation function
calc_PCB2 = function(a,b,c,age) {
predicted_l = a + b * (age^c)
return (predicted_l)
}
# Task 5.2 - Compare
fixed_age = 10
value_BWEstimator = calc_PCB(a,b,fixed_age)
value_newEstimator = calc_PCB2(a2,b2,c2,fixed_age)
value_newEstimator == value_BWEstimator
# Task 5.3 - Plot both equations
plot(x=ages, y=l, type="l", col="red", ylab = "Log(PCB) ->", xlab = "Ages ->",
main="Comparing Bates-Watts estimator and the new estimator")
lines(ages, calc_PCB2(a2,b2,c2,ages), type="l", col="orange")
setwd("D:/Assignments")
