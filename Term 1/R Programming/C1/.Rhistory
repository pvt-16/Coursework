planets[ planets$name== "Earth",]$contains_humans <-2
as.numeric(planets$contains_humans)
as.character(planets$contains_humans)
planets$contains_humans <- 0
planets[ planets$name== "Earth",]
# table[ columnname == value , ]  -> That , is important?!
planets[ planets$name== "Earth",]$contains_humans <-1
# Turn it into a factor with labels "no" and "yes"
planets$contains_humans <- factor(planets$contains_humans,levels = c(0,1),labels = c("no", "yes"))
as.numeric(planets$contains_humans)
as.character(planets$contains_humans)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(diamonds)
force(diamonds)
data(diamonds)
force(diamonds)
help(force)
diamonds
View(diamonds)
View(diamonds)
typeof(diamonds)
unique(diamonds$cut,)
unique(diamonds$cut,)
data(diamonds)
unique(diamonds$cut,)
data(diamonds)
library(ggplot2)
data(diamonds)
diamonds$color
unique(diamonds$color)
diamonds$color
unique(diamonds$color)
unique(diamonds$cut,)
data(diamonds)
data(diamonds)
data(diamonds)
View(diamonds)
unique(diamonds$color)
unique(diamonds$cut,)
help(unique)
unique(diamonds$color)
unique(diamonds$cut)
planets[ planets$name== "Earth"]
,
planets[ planets$name== "Earth",]
hist(diamonds)
hist(c[1,2,3,4])
hist([1,2,3,4])
plot(diamonds)
help(plot)
help("ggplot2%%plot"
)
View(diamonds)
with(diamonds, hist(diamonds$carat))
with(diamonds, hist(diamonds$cut))
with(diamonds, hist(diamonds$price))
par(mfrow=c(2,1))
histout=apply(diamonds,2,hist)
par(mfrow=c(2,1))
histout=apply(diamonds$carat,2,hist)
plot(diamonds)
plot(diamonds$cut, diamonds$carat)
plot(diamonds$cut, diamonds$carat)
plot(diamonds$carat, diamonds$cut)
with(diamonds, hist(diamonds$carat))
with(diamonds, hist(diamonds$price))
with(diamonds, hist(diamonds$carat))
with(diamonds, hist(diamonds$price))
hist(diamonds$price)
plot(diamonds$carat, diamonds$cut)
plot(diamonds$cut, diamonds$carat)
plot(diamonds$cut, diamonds$carat, xlab ="cut", ylab = "carat")
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1) +
facet_wrap( ~ cut, ncol=5)
plot(diamonds$carat, diamonds$cut,  ylab ="cut", xlab = "carat")
hist(diamonds$carat)
help(hist)
plot(diamonds$cut, diamonds$carat, xlab ="cut", ylab = "carat")
plot(diamonds$carat, diamonds$cut,  ylab ="cut", xlab = "carat")
#plot(diamonds) -> plots all columns vs all columns. Sexy
plot(diamonds$carat, diamonds$cut,  ylab ="cut", xlab = "carat")
plot(diamonds$cut, diamonds$carat, xlab ="cut", ylab = "carat")
qplot(x=cut, y=carat, data=diamonds, geom="boxplot")
hekp(qplot)
help(qplot)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1) +facet_wrap( ~ cut, ncol=5)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1)
help(facet_wrap)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1) +facet_wrap( ~ cut, ncol=5)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1) +facet_grid( ~ cut, ncol=5)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1) +facet_wrap( ~ cut, ncol=5)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1)
qplot(x=carat, data=diamonds, geom="histogram", binwidth=0.1) +facet_grid()
plot(diamonds$cut, diamonds$carat, xlab ="cut", ylab = "carat")
qplot(x=cut, y=carat, data=diamonds)
plot(diamonds$cut, diamonds$carat, xlab ="cut", ylab = "carat")
qplot(x=cut, y=carat, data=diamonds, geom="boxplot")
qplot(x=cut, y=carat, data=diamonds)
qplot(x=carat, y=price, colour=clarity, data=diamonds, geom="point")
qplot(x=carat, y=price, colour=clarity, data=diamonds, geom="point")
qplot(x=carat, y=price, colour=clarity, data=diamonds, geom="point") + facet_wrap( ~ clarity, ncol=4)
setwd("D:/Assignments/SCC 461/C1")
accidentsData = read.csv("accidents2014.csv")
head(accidentsData)
dim(accidentsData)
colnames(accidentsData)
#Reading data fromCSV file
accidentsData = read.csv("accidents2014.csv")
#Check column names
colnames(accidentsData)
#Get dimensions of the dataframe
dim(accidentsData)
select(accidentsData, accidentsData$Sex.of.Casualty)
select(accidentsData, accidentsData$Sex.of.Casualty)
library(dplyr)
library(dplyr)
#Reading data fromCSV file
accidentsData = read.csv("accidents2014.csv")
#Check column names -no need to print
#colnames(accidentsData)
#Get dimensions of the dataframe
dim(accidentsData)
select(accidentsData, accidentsData$Sex.of.Casualty)
select(accidentsData$Sex.of.Casualty)
help(select)
select(accidentsData, !accidentsData$Sex.of.Casualty)
#Check column names -no need to print
colnames(accidentsData)
accidentsData
accidentsData
select(accidentsData, !accidentsData$Sex.of.Casualty)
select(accidentsData)
select(accidentsData, accidentsData$Sex.of.Casualty)
select(accidentsData, accidentsData$Age.of.Casualty)
select(accidentsData, accidentsData$Age.of.Casualty)
help(select)
select(accidentsData, accidentsData$Number.of.Vehicles)
accidentsData_filtered = select(accidentsData, accidentsData$Number.of.Vehicles)
accidentsData_filtered
accidentsData_filtered = select(accidentsData, c=("accidentsData$Number.of.Vehicles"))
accidentsData
accidentsData_filtered = select(accidentsData, c=("accidentsData$Number.of.Vehicles"))
accidentsData_filtered = select(accidentsData, c=(accidentsData$Number.of.Vehicles))
accidentsData
accidentsData_filtered = select(accidentsData, c=(accidentsData$Number.of.Vehicles))
accidentsData_filtered
accidentsData
accidentsData_filtered = select(accidentsData, c(accidentsData$Number.of.Vehicles))
accidentsData_filtered
accidentsData_filtered = select(accidentsData, c(accidentsData$Number.of.Vehicles, accidentsData$Time..24hr.))
accidentsData
accidentsData_filtered = select(accidentsData, c(accidentsData$Number.of.Vehicles, accidentsData$Time..24hr.))
accidentsData
accidentsData
accidentsData_filtered = select(accidentsData, -c(accidentsData$Accident.Date))
col(accidentsData)
table(accidentsData)
data.frame(accidentsData)
accidentsData_filtered = select(accidentsData, -c("accidentsData$Accident.Date"))
accidentsData_filtered = select(accidentsData, -c("Accident.Date"))
accidentsData_filtered
accidentsData
accidentsData_filtered = select(accidentsData, -c("Accident.Date","Time..24hr",accidentsData$Road.Surface, accidentsData$Lighting.Conditions, accidentsData$Weather.Conditions))
accidentsData
accidentsData_filtered = select(accidentsData, -c("Accident.Date",accidentsData$Road.Surface, accidentsData$Lighting.Conditions, accidentsData$Weather.Conditions))
accidentsData_filtered
accidentsData
accidentsData_filtered = select(accidentsData, -c("Accident.Date","Road.Surface","Lighting.Conditions", "Weather.Conditions"))
accidentsData_filtered
#Check column names -no need to print
colnames(accidentsData)
accidentsData
accidentsData_filtered = select(accidentsData, -c("Accident.Date","Road.Surface","Lighting.Conditions", "Weather.Conditions", "Time..24hr."))
accidentsData_filtered
accidentsData
accidentsData_filtered = select(accidentsData, -c("Accident.Date","Road.Surface","Lighting.Conditions", "Weather.Conditions", "Time..24hr."))
colnames(accidentsData_filtered)
dim(accidentsData_filtered)
# Do it using column names and not strings
accidentsData_select = select(accidentsData, -c("Accident.Date","Road.Surface","Lighting.Conditions", "Weather.Conditions", "Time..24hr."))
dim(accidentsData_select)
help(filter)
accidentsData_filtered = filter(accidentsData_select, accidentsData_select$Type.of.Vehicle == 9)
accidentsData_filtered
accidentsData_filtered = filter(accidentsData_select, accidentsData_select$Type.of.Vehicle == 9, accidentsData_select$X1st.Road.Class != 1)
accidentsData_filtered
accidentsData_filtered = filter(accidentsData_select, accidentsData_select$Type.of.Vehicle == 9, accidentsData_select$X1st.Road.Class != 1)
dim(accidentsData_filtered)
plot(accidentsData$Grid.Ref..Easting, accidentsData$Grid.Ref..Northing)
plot(accidentsData_select$Grid.Ref..Easting, accidentsData_select$Grid.Ref..Northing)
count(accidentsData_select)
count(accidentsData_filtered)
plot(accidentsData_filtered$Grid.Ref..Easting, accidentsData_filtered$Grid.Ref..Northing)
count(accidentsData_filtered)
plot(accidentsData_filtered$Grid.Ref..Easting, accidentsData_filtered$Grid.Ref..Northing)
head(accidentsData_filtered)
top5accidents = head(accidentsData_filtered)
View(top5accidents)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing)
View(top5accidents)
View(top5accidents)
top5accidents = select(head(accidentsData_filtered),c("Grid.Ref..Easting", "Grid.Ref..Northing"))
View(top5accidents)
View(top5accidents)
data.frame(top5accidents)
help(add)
add_row(top5accidents,"429967","434260")
top5accidents
add_row(top5accidents,"Grid.Ref..Easting","434260")
add_row(top5accidents,top5accidents$Grid.Ref..Easting="44",top5accidents$Grid.Ref..Northing="99")
add_row(top5accidents,top5accidents$Grid.Ref..Easting,"44",top5accidents$Grid.Ref..Northing="99")
add_row(top5accidents,top5accidents$Grid.Ref..Easting,"44",top5accidents$Grid.Ref..Northing,"99")
top5accidents%>%add_row(top5accidents$Grid.Ref..Easting,"44",top5accidents$Grid.Ref..Northing,"99")
top5accidents%>%add_row(top5accidents$Grid.Ref..Easting,"44",top5accidents$Grid.Ref..Northing,"99")
top5accidents[nrow(top5accidents)+1,] = c("44","6655")
top5accidents[nrow(top5accidents)+1,] = c("429967", "434260")
top5accidents
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing)
top5accidents = filter(top5accidents, top5accidents$Grid.Ref..Easting>10000)
top5accidents
top5accidents = filter(top5accidents, top5accidents$Grid.Ref..Easting>10000)
top5accidents
top5accidents = filter(top5accidents, top5accidents$Grid.Ref..Easting>10000)
top5accidents
top5accidents = head(top5accidents)
top5accidents
top5accidents[nrow(top5accidents)+1,] = c("429967", "434260")
top5accidents
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing, type='n')
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(round(x, 2), round(y, 2), sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(round(top5accidents$Grid.Ref..Easting, 2),
round(top5accidents$Grid.Ref..Northing, 2), sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing, type='n'
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing, type='n',
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing, type='n')
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing, type='n')
top5accidents
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing)
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=0.8)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing, type='n')
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=0.8)
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
paste(top5accidents$Grid.Ref..Easting,
top5accidents$Grid.Ref..Northing, sep=", "), cex=1)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing, type='n')
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
top5accidents$Grid.Ref..Easting, cex=0.7)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing)
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
top5accidents$Grid.Ref..Easting, cex=0.7)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
top5accidents$Grid.Ref..Easting, cex=0.7)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels="mmm", cex=0.7)
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels="mmm", cex=0.7, pos = 2)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="green")
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels="mmm", cex=0.7, pos = 2)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="green",labels=c("mmm"))
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="green",labels=c("mmm"))
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels="mmm", cex=0.7, pos = 2)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="green")
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels=c("m","m","m""m","m","m","m"), cex=0.7, pos = 2)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="green")
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels=c("m","m","m","m","m","m"), cex=0.7, pos = 2)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="green")
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels=c("m","m","m","m","m","m","p"), cex=0.7, pos = 2)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="blue")
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels=c("m","m","m","m","m","m","p"), cex=0.7, pos = 2)
help(text)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="blue")
text(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
labels=c("m","m","m","m","m","m","p"), pos = 2)
plot(top5accidents$Grid.Ref..Easting, top5accidents$Grid.Ref..Northing,
col="blue")
top5accidents
help(mutate)
(5-3)^2
sqrt
help(sqrt)
sqrt((5-3) ^2)
calc_distance <- function (x1, x2, y1, y2) {
sqrt((x2-x1)^2 + (y2-y1)^2)
}
mutate(accidentsData_filtered, )
x1 = 429967
y1 = 434260
x1
#Defining leeds centre coordinates
x1 = 429967
y1 = 434260
calc_distance <- function (x1, x2, y1, y2) {
sqrt((x2-x1)^2 + (y2-y1)^2)
}
mutate(accidentsData_filtered, DistanceFromCentre = calc_distance(x1, accidentsData_filtered$Grid.Ref..Easting, y1, accidentsData_filtered$Grid.Ref..Northing) )
#Defining leeds centre coordinates
x1 = 429967
y1 = 434260
calc_distance <- function (x1, x2, y1, y2) {
sqrt((x2-x1)^2 + (y2-y1)^2)
}
mutate(accidentsData_filtered, Distance.From.Centre = calc_distance(x1, accidentsData_filtered$Grid.Ref..Easting, y1, accidentsData_filtered$Grid.Ref..Northing) )
accidentsData_filtered
mutate(accidentsData_filtered, Distance.From.Centre = calc_distance(x1, accidentsData_filtered$Grid.Ref..Easting, y1, accidentsData_filtered$Grid.Ref..Northing) )
accidentsData_filtered
View(accidentsData_filtered)
accidentsData_withDistance
#Defining leeds centre coordinates
x1 = 429967
y1 = 434260
calc_distance <- function (x1, x2, y1, y2) {
sqrt((x2-x1)^2 + (y2-y1)^2)
}
accidentsData_withDistance = mutate(accidentsData_filtered,
Distance.From.Centre = calc_distance(x1, accidentsData_filtered$Grid.Ref..Easting, y1, accidentsData_filtered$Grid.Ref..Northing) )
accidentsData_withDistance
accidentsData_orderedbyDistance = arrange(accidentsData_withDistance, accidentsData_withDistance$Distance.From.Centre)
accidentsData_orderedbyDistance
tail(accidentsData_orderedbyDistance)
# Creating histogram
ggplot(accidentsData_orderedbyDistance)
library(ggplot2)
# Creating histogram
ggplot(accidentsData_orderedbyDistance)
help(ggplot)
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(accidentsData_orderedbyDistance$Age.of.Casualty, count(accidentsData_orderedbyDistance$Age.of.Casualty)))
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(accidentsData_orderedbyDistance$Age.of.Casualty))
hist(accidentsData_orderedbyDistance)
hist(accidentsData_orderedbyDistance$Age.of.Casualty)
help(hist)
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age" )
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty, fill =  ))
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty, fill =  ))
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram(binwidth = 10)
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( Age.of.Casualty,binwidth = 10)
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( accidentsData_orderedbyDistance$Age.of.Casualty,binwidth = 10)
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10)
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10) + xlab("Casualty age")
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Casualty age", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10)
+ xlab("Casualty age") + ylab("No. of Casualities")
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Number", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10)  + xlab("Casualty age") + ylab("No. of Casualities")
help("geom_histogram")
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Number", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, show.legend = TRUE)  + xlab("Casualty age") + ylab("No. of Casualities")
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Number", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, position = "stack")  + xlab("Casualty age") + ylab("No. of Casualities")
# Creating histogram
hist(accidentsData_orderedbyDistance$Age.of.Casualty, xlab = "Casualty age", ylab="Number", main="histogram of age of casualties" )
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10)  + xlab("Casualty age") + ylab("No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10)  + xlab("Casualty age") + ylab("No. of Casualities")
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="blue")  + xlab("Casualty age") + ylab("No. of Casualities")
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="blue", fill="lightblue")  + xlab("Casualty age") + ylab("No. of Casualities")
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="blue", fill="green")  + xlab("Casualty age") + ylab("No. of Casualities")
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="yellow", fill="green")  + xlab("Casualty age") + ylab("No. of Casualities")
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="red", fill="green")  + xlab("Casualty age") + ylab("No. of Casualities")
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="red", fill="yellow")  + xlab("Casualty age") + ylab("No. of Casualities")
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="yellow", fill="red")  + xlab("Casualty age") + ylab("No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance)
+ geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="yellow", fill="red")
# Creating histogram
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="yellow", fill="red")
+ xlab("Casualty age") + ylab("No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance) + geom_histogram( aes(Age.of.Casualty),binwidth = 10, color="yellow", fill="red") + xlab("Casualty age") + ylab("No. of Casualities")
unlink("Coursework 1_cache", recursive = TRUE)
library(dplyr)
library(ggplot2)
#Reading data fromCSV file
accidentsData = read.csv("accidents2014.csv")
#data.frame(accidentsData)
#Check column names -no need to print
#colnames(accidentsData)
#Get dimensions of the dataframe
dim(accidentsData)
# Do it using column names and not strings
accidentsData_select = select(accidentsData, -c("Accident.Date","Road.Surface",
"Lighting.Conditions",
"Weather.Conditions",
"Time..24hr."))
#dim(accidentsData_select)
accidentsData_filtered = filter(accidentsData_select,
accidentsData_select$Type.of.Vehicle == 9,
accidentsData_select$X1st.Road.Class != 1)
dim(accidentsData_filtered)
#Defining leeds centre coordinates
x1 = 429967
y1 = 434260
#Defining function to calculate the distance from city centre
calc_distance <- function (x1, x2, y1, y2) {
sqrt((x2-x1)^2 + (y2-y1)^2)
}
#Getting accidents data with distance column
accidentsData_withDistance = mutate(accidentsData_filtered,
Distance.From.Centre = calc_distance
(x1, accidentsData_filtered$Grid.Ref..Easting,
y1, accidentsData_filtered$Grid.Ref..Northing))
accidentsData_orderedbyDistance = arrange(accidentsData_withDistance,
accidentsData_withDistance$Distance.From.Centre)
tail(accidentsData_orderedbyDistance)
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red") +
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red") +
scale_x_continuous(breaks = seq(0,250,25))+
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red") +
scale_x_continuous(breaks = seq(0,100,10))+
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red") +
scale_x_continuous(breaks = seq(0,200,10))+
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red", center=0.25) +
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red", center=5) +
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red") +
scale_x_continuous(breaks = seq(0,200,10))+
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
# Creating histogram
ggplot(accidentsData_orderedbyDistance, aes(Age.of.Casualty)) +
geom_histogram(binwidth = 10, color="yellow",
position = "identity", fill="red") +
labs(title="Histogram for Age", x="Casualty age", y="No. of Casualities")
